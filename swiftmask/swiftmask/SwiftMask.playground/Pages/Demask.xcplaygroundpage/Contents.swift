import Foundation

func applyMask(to raw: Data, with mask: Data) -> Data {
    precondition(raw.count == mask.count)
    return Data(zip(raw, mask).map(^))
}

func demaskString(from masked: Data, with mask: Data) -> String {
    return String(data: applyMask(to: masked, with: mask), encoding: .utf8)!
}

let masked = Data([
    0xed, 0x5e, 0xf0, 0xe2, 0x6d, 0xde, 0xdd, 0x95, 0x4c, 0xe8, 0xfd, 0x71,
    0x49, 0xdc, 0x26, 0xe7, 0x1a, 0x12, 0xb1, 0x90
    ])

let mask = Data([
    0xb9, 0x7, 0xa9, 0xae, 0x3a, 0x95, 0x90, 0xc0, 0xd, 0xb8, 0xa7, 0x39,
    0x5, 0x85, 0x7e, 0xad, 0x57, 0x42, 0xe4, 0xc7
    ])

let secret = demaskString(from: masked, with: mask)
print(secret)
